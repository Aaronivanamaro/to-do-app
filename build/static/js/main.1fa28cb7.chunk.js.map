{"version":3,"sources":["firebase/index.js","context/index.js","hooks/index.js","components/Sidebar.js","components/Main.js","components/User.js","components/Modal.js","components/TodoForm.js","constants/index.js","components/AddNewTodo.js","components/Calendar.js","components/ProjectForm.js","components/AddNewProject.js","components/RenameProject.js","components/Project.js","components/Projects.js","components/Todo.js","components/Next7Days.js","components/Todos.js","components/EditTodo.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","TodoContext","createContext","TodoContextProvider","children","defaultProject","useState","selectedProject","setSelectedProject","undefined","selectedTodo","setSelectedTodo","todos","setTodos","useEffect","unsubscribe","firestore","collection","onSnapshot","snapshot","data","docs","map","doc","id","useTodos","projectsWithStats","projects","setProjectsWithStats","project","numOfTodos","filter","todo","projectName","name","checked","length","useProjectsWithStats","setProjects","useProjects","filteredTodos","setFilteredTodos","todayDateFormated","moment","format","date","todoDate","todayDate","diffDays","diff","useFilterTodos","Provider","value","Sidebar","useContext","sidebarRef","useRef","document","addEventListener","handleClick","removeEventListener","e","target","current","contains","className","ref","Main","User","color","href","Modal","showModal","setShowModal","modalRef","modalAnimation","useSpring","opacity","top","config","friction","onClick","div","style","newTheme","createMuiTheme","palette","primary","main","TodoForm","handleSubmit","heading","text","setText","day","setDay","time","setTime","todoProject","setTodoProject","showButtons","ThemeProvider","theme","utils","DateFnsUtils","onSubmit","type","onChange","placeholder","autoFocus","DatePicker","TimePicker","fontWeight","letterSpacing","size","calendarItems","AddNewTodo","Date","preventDefault","includes","add","randomcolor","Calendar","showMenu","setShowMenu","spin","transform","menuAnimation","display","lineHeight","item","ProjectForm","setValue","confirmButtonText","role","MySwal","withReactContent","Swal","AddNewProject","setProjectName","projectsRef","where","get","then","querySnapshot","empty","fire","icon","iconColor","confirmButtonColor","RenameProject","newProjectName","setNewProjectName","todosRef","oldProjectName","update","forEach","renameProject","Project","edit","fadeIn","from","marginTop","to","btnTransitions","useTransition","right","enter","leave","props","editProject","delete","deleteProject","Projects","setEdit","pencilColor","changeHover","span","Todo","hover","setHover","handleDelete","deleteTodo","checkTransitions","position","onMouseEnter","onMouseLeave","checkTodo","nextDayDate","repeatedTodo","repeatNextDay","Next7Days","weekTodos","setWeekTodos","sortedTodosByDay","number","today","parseInt","arrangeDays","slice","concat","Todos","EditTodo","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1fa28cb7.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAC0dbe6kltYyK4xEmVzLelMc3ZKQiOok4\",\r\n    authDomain: \"todo-app-e9356.firebaseapp.com\",\r\n    projectId: \"todo-app-e9356\",\r\n    storageBucket: \"todo-app-e9356.appspot.com\",\r\n    messagingSenderId: \"1057972825260\",\r\n    appId: \"1:1057972825260:web:d85f2c78cf51a603244309\"\r\n}\r\n\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\nexport default firebase","import React, { createContext, useState } from 'react'\r\nimport { useTodos, useProjects, useFilterTodos, useProjectsWithStats } from '../hooks'\r\n\r\nconst TodoContext = createContext()\r\n\r\nfunction TodoContextProvider({children}){\r\n    const defaultProject = 'today'\r\n    const [selectedProject, setSelectedProject] = useState(defaultProject)\r\n    const [selectedTodo, setSelectedTodo] = useState(undefined)\r\n\r\n    const todos = useTodos()\r\n    const projects = useProjects()\r\n    const projectsWithStats = useProjectsWithStats(projects, todos)\r\n    const filteredTodos = useFilterTodos(todos, selectedProject)\r\n\r\n    return (\r\n        <TodoContext.Provider\r\n            value={\r\n                {\r\n                    defaultProject,\r\n                    selectedProject,\r\n                    setSelectedProject,\r\n                    todos : filteredTodos,\r\n                    projects : projectsWithStats,\r\n                    selectedTodo,\r\n                    setSelectedTodo\r\n                }\r\n            }\r\n        >\r\n            {children}\r\n        </TodoContext.Provider>\r\n    )\r\n}\r\n\r\nexport { TodoContextProvider, TodoContext }","import moment from 'moment'\r\nimport { useState, useEffect } from 'react'\r\nimport firebase from '../firebase'\r\n\r\nexport function useTodos() {\r\n\r\n    const [todos, setTodos] = useState([])\r\n\r\n    useEffect(() => {\r\n        let unsubscribe = firebase\r\n        .firestore()\r\n        .collection('todos')\r\n        .onSnapshot( snapshot => {\r\n            const data = snapshot.docs.map( doc => {\r\n                return {\r\n                    id : doc.id,\r\n                    ...doc.data()\r\n                }\r\n            })\r\n            setTodos(data)\r\n        })\r\n\r\n        return () => unsubscribe()\r\n    }, [])\r\n\r\n    return todos\r\n}\r\n\r\nexport function useFilterTodos(todos, selectedProject) {\r\n\r\n    const [filteredTodos, setFilteredTodos] = useState([])\r\n\r\n    useEffect( () => {\r\n        let data;\r\n        const todayDateFormated = moment().format('MM/DD/YYYY')\r\n\r\n        if (selectedProject === 'today') {\r\n            data = todos.filter(todo => todo.date === todayDateFormated)\r\n        } else if (selectedProject === 'next 7 days') {\r\n            data = todos.filter(todo => {\r\n                const todoDate = moment(todo.date, 'MM/DD/YYYY')\r\n                const todayDate = moment(todayDateFormated, 'MM/DD/YYYY')\r\n\r\n                const diffDays = todoDate.diff(todayDate, 'days')\r\n\r\n                return diffDays >=0 && diffDays < 7\r\n            })\r\n        } else if ( selectedProject === 'all days') {\r\n            data = todos\r\n        } else {\r\n            data = todos.filter(todo => todo.projectName === selectedProject)\r\n        }\r\n\r\n        setFilteredTodos(data)\r\n    }, [todos, selectedProject])\r\n\r\n    return filteredTodos\r\n}\r\n\r\nexport function useProjects() {\r\n\r\n    const [projects, setProjects] = useState([])\r\n\r\n    useEffect(() => {\r\n        let unsubscribe = firebase\r\n        .firestore()\r\n        .collection('projects')\r\n        .onSnapshot( snapshot => {\r\n            const data = snapshot.docs.map( doc => {\r\n                return {\r\n                    id : doc.id,\r\n                    name : doc.data().name\r\n                }\r\n            })\r\n            setProjects(data)\r\n        })\r\n\r\n        return () => unsubscribe()\r\n    }, [])\r\n\r\n    return projects\r\n}\r\n\r\nexport function useProjectsWithStats(projects, todos) {\r\n \r\n    const [projectsWithStats, setProjectsWithStats] = useState([])\r\n\r\n    useEffect(() => {\r\n        const data = projects.map((project) => {\r\n            return {\r\n                numOfTodos : todos.filter( todo => todo.projectName === project.name && !todo.checked).length,\r\n                ...project\r\n            }\r\n        })\r\n\r\n        setProjectsWithStats(data)\r\n    }, [projects, todos])\r\n\r\n    return projectsWithStats\r\n}","import React, { useContext, useEffect, useRef } from 'react'\r\nimport { TodoContext } from '../context'\r\n\r\nfunction Sidebar({ children }) {\r\n    // CONTEXT\r\n    const { setSelectedTodo } = useContext(TodoContext)\r\n\r\n    // REF\r\n    const sidebarRef = useRef()\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('click', handleClick)\r\n\r\n        return () => document.removeEventListener('click', handleClick)\r\n    })\r\n\r\n    const handleClick = e => {\r\n        if (e.target === sidebarRef.current || sidebarRef.current.contains(e.target)) {\r\n            setSelectedTodo(undefined)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className='Sidebar'\r\n            ref={sidebarRef}\r\n        >\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar","import React from 'react'\r\n\r\nfunction Main({ children }){\r\n\r\n    return (\r\n        <div className='Main'>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main","import React from 'react'\r\nimport { ListTask } from 'react-bootstrap-icons'\r\n\r\nfunction User(){\r\n\r\n    return (\r\n        <div className='User'>\r\n            <div className=\"logo\">\r\n                <ListTask color=\"#025955\"/>\r\n            </div>\r\n            <div className='info'>\r\n                <p>To-Do App</p>\r\n                <a href=\"#\">Logout!</a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User","import React, {useRef} from 'react'\r\nimport { useSpring, animated } from 'react-spring'\r\n\r\nfunction Modal({children, showModal, setShowModal}) {\r\n\r\n    const modalRef = useRef()\r\n\r\n    const closeModal = (e) => {\r\n        if(e.target === modalRef.current){\r\n            setShowModal(false)\r\n        }\r\n    }\r\n\r\n    // ANIMATION\r\n    const modalAnimation = useSpring({\r\n        opacity : showModal ? 1 : 0,\r\n        top : showModal ? '25%' : '0%',\r\n        config : { friction : 10 }\r\n    })\r\n    \r\n    return (\r\n        showModal &&\r\n        <div className=\"Modal\" ref={modalRef} onClick={closeModal}>\r\n            <animated.div style={modalAnimation} className=\"m-container\">\r\n                {children}\r\n            </animated.div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal","import React from 'react'\r\nimport { Bell, CalendarDay, Clock, Palette, X } from 'react-bootstrap-icons'\r\nimport { DatePicker, TimePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst newTheme = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        main: \"#00917C\"\r\n      }\r\n    }\r\n  });\r\n\r\nfunction TodoForm({\r\n    handleSubmit,\r\n    heading = false,\r\n    text, setText,\r\n    day, setDay,\r\n    time, setTime,\r\n    todoProject, setTodoProject,\r\n    projects,\r\n    showButtons = false,\r\n    setShowModal = false\r\n}){\r\n\r\n    return (\r\n      <ThemeProvider theme={newTheme}>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <form onSubmit={handleSubmit} className='TodoForm'>\r\n                <div className=\"text\">\r\n                    {\r\n                        heading && \r\n                        <h3>{heading}</h3>\r\n                    }\r\n                    <input\r\n                        type='text'\r\n                        value={text}\r\n                        onChange={e => setText(e.target.value)}\r\n                        placeholder='To do ...'\r\n                        autoFocus\r\n                    />\r\n                </div>\r\n                <div className=\"remind\">\r\n                    <Bell className=\"icons-style\"\r\n                          color=\"#025955\" />\r\n                    <p>Remind Me!</p>\r\n                </div>\r\n                <div className=\"pick-day\">\r\n                    <div className=\"title\">\r\n                        <CalendarDay color=\"#025955\"/>\r\n                        <p>Choose a day</p>\r\n                    </div>\r\n                    <DatePicker\r\n                        value={day}\r\n                        onChange={day => setDay(day)}\r\n                    />\r\n                </div>\r\n                <div className=\"pick-time\">\r\n                    <div className=\"title\">\r\n                        <Clock color=\"#025955\"/>\r\n                        <p>Choose time</p>\r\n                    </div>\r\n                    <TimePicker\r\n                        value={time}\r\n                        onChange={time => setTime(time)}\r\n                    />\r\n                </div>\r\n                <div className=\"pick-project\">\r\n                    <div className=\"title\">\r\n                        <Palette className=\"icons-style\"\r\n                                 color=\"#025955\" />\r\n                        <p>Choose a project</p>\r\n                    </div>\r\n                    <div className=\"projects\">\r\n                        {\r\n                            projects.length > 0 ?\r\n                            projects.map( project => \r\n                                <div\r\n                                    className={`project ${todoProject === project.name ? \"active\" : \"\"}`}\r\n                                    onClick={() => setTodoProject(project.name)}\r\n                                    key={project.id}\r\n                                >\r\n                                    {project.name}\r\n                                </div>    \r\n                            )\r\n                            :\r\n                            <div style={{color:'#ff0000', \r\n                                         fontWeight:'600', letterSpacing:'0.35px'}}>\r\n                                Please add a project before proceeding\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                {\r\n                    showButtons &&\r\n                    <div>\r\n                        <div className=\"cancel\" onClick={() => setShowModal(false)}>\r\n                            <X size='35'/>\r\n                        </div>\r\n                        <div className=\"confirm\">\r\n                            <button>+ Add to do</button>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </form>\r\n        </MuiPickersUtilsProvider>\r\n      </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default TodoForm","export const calendarItems = ['today', 'next 7 days', 'all days']","import React, {useContext, useEffect, useState} from 'react'\r\nimport Modal from './Modal'\r\nimport TodoForm from './TodoForm'\r\nimport { TodoContext } from '../context'\r\nimport { calendarItems } from '../constants'\r\nimport firebase from '../firebase'\r\nimport moment from 'moment'\r\nimport randomcolor from 'randomcolor'\r\n\r\nfunction AddNewTodo() {\r\n    // CONTEXT\r\n    const { projects, selectedProject } = useContext(TodoContext)\r\n    \r\n    // STATE\r\n    const [showModal, setShowModal] = useState(false)\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState(new Date())\r\n    const [time, setTime] = useState(new Date())\r\n    const [todoProject, setTodoProject] = useState(selectedProject)\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        if( text && !calendarItems.includes(todoProject)){\r\n            firebase\r\n                .firestore()\r\n                .collection('todos')\r\n                .add(\r\n                    {\r\n                        text : text,\r\n                        date : moment(day).format('MM/DD/YYYY'),\r\n                        day : moment(day).format('d'),\r\n                        time : moment(time).format('hh:mm A'),\r\n                        checked : false,\r\n                        color : randomcolor(),\r\n                        projectName : todoProject\r\n                    }\r\n                )\r\n\r\n            setShowModal(false)\r\n            setText('')\r\n            setDay(new Date())\r\n            setTime(new Date())\r\n        }\r\n    }\r\n\r\n    useEffect( () => {\r\n        setTodoProject(selectedProject)\r\n    }, [selectedProject])\r\n\r\n    return (\r\n        <div className='AddNewTodo'>\r\n            <div className=\"btn\">\r\n                <button onClick={() => setShowModal(true)}>\r\n                    + New To Do\r\n                </button>\r\n            </div>\r\n            <Modal showModal={showModal} setShowModal={setShowModal}>\r\n                <TodoForm\r\n                    handleSubmit={handleSubmit}\r\n                    heading='Add new to do!'\r\n                    text={text}\r\n                    setText={setText}\r\n                    day={day}\r\n                    setDay={setDay}\r\n                    time={time}\r\n                    setTime={setTime}\r\n                    todoProject={todoProject}\r\n                    setTodoProject={setTodoProject}\r\n                    projects={projects}\r\n                    showButtons={true}\r\n                    setShowModal={setShowModal}\r\n                />\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewTodo","import React, { useContext, useState } from 'react'\r\nimport { CalendarDate, CaretUp } from 'react-bootstrap-icons'\r\nimport { calendarItems } from '../constants'\r\nimport { TodoContext } from '../context'\r\nimport { useSpring, animated } from 'react-spring'\r\n\r\nfunction Calendar() {\r\n    // STATE\r\n    const [showMenu, setShowMenu] = useState(true)\r\n\r\n    // CONTEXT\r\n    const { setSelectedProject } = useContext(TodoContext)\r\n    \r\n    // ANIMATION\r\n    const spin = useSpring({\r\n        transform : showMenu ? 'rotate(0deg)' : 'rotate(180deg)',\r\n        config : { friction : 10 }\r\n    })\r\n\r\n    const menuAnimation = useSpring({\r\n        display : showMenu ? 'block' : 'none',\r\n        lineHeight : showMenu ? 1.2 : 0\r\n    })\r\n\r\n    return (\r\n        <div className='Calendar'>\r\n            <div className=\"header\">\r\n                <div className=\"title\">\r\n                    <CalendarDate size={24}\r\n                                  color=\"#025955\"/>\r\n                    <p>Calendar</p>\r\n                </div>\r\n                <animated.div\r\n                    style={spin}\r\n                    onClick={() => setShowMenu(!showMenu)}\r\n                    className=\"btns\"\r\n                >\r\n                    <span>\r\n                        <CaretUp size={24}\r\n                                 color=\"#025955\" />\r\n                    </span>\r\n                </animated.div>\r\n            </div>\r\n            <animated.div style={menuAnimation} className=\"items\">\r\n                {\r\n                    calendarItems.map( item => \r\n                        <div\r\n                            className=\"item\"\r\n                            key={item}\r\n                            onClick={ () => setSelectedProject(item)}\r\n                        >\r\n                            {item}\r\n                        </div>\r\n                    )\r\n                }\r\n            </animated.div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Calendar","import React from 'react'\r\n\r\nfunction ProjectForm({handleSubmit, heading, value, setValue, setShowModal, confirmButtonText}) {\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className='ProjectForm'>\r\n            <h3>{heading}</h3>\r\n            <input\r\n                value={value}\r\n                onChange={(e) => setValue(e.target.value)}\r\n                type='text'\r\n                placeholder='project name...'\r\n                autoFocus\r\n            />\r\n            <button className='cancel' role='button' onClick={() => setShowModal(false)}>\r\n                Cancel\r\n            </button>\r\n            <button className=\"confirm\">\r\n                {confirmButtonText}\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ProjectForm","import React, {useState} from 'react'\r\nimport Modal from './Modal'\r\nimport ProjectForm from './ProjectForm'\r\nimport { Plus } from 'react-bootstrap-icons'\r\nimport firebase from '../firebase'\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\n\r\nconst MySwal = withReactContent(Swal)\r\n\r\nfunction AddNewProject() {\r\n    // STATE\r\n    const [showModal, setShowModal] = useState(false)\r\n    const [projectName, setProjectName] = useState('')\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault()\r\n\r\n        if ( projectName ) {\r\n            const projectsRef = firebase.firestore().collection('projects')\r\n\r\n            projectsRef\r\n                .where('name', '==', projectName)\r\n                .get()\r\n                .then( querySnapshot => {\r\n                    if (querySnapshot.empty) {\r\n                        projectsRef\r\n                            .add(\r\n                                {\r\n                                    name : projectName\r\n                                }\r\n                            )\r\n                    } else {\r\n                        MySwal.fire({\r\n                            text: 'Project already exists',\r\n                            icon: 'warning',\r\n                            iconColor: '#00917C',\r\n                            confirmButtonColor: '#025955'\r\n                        })\r\n                    }\r\n                })\r\n                \r\n            setShowModal(false)\r\n            setProjectName('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='AddNewProject'>\r\n            <div className=\"add-button\">\r\n                <span onClick={() => setShowModal(true)}>\r\n                    <Plus size={24}\r\n                          color=\"#025955\"/>\r\n                </span>\r\n            </div>\r\n            <Modal showModal={showModal} setShowModal={setShowModal}>\r\n                <ProjectForm\r\n                    handleSubmit={handleSubmit}\r\n                    heading='New project!'\r\n                    value={projectName}\r\n                    setValue={setProjectName}\r\n                    setShowModal={setShowModal}\r\n                    confirmButtonText='+ Add Project'\r\n                />\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewProject","import React, {useContext, useState} from 'react'\r\nimport ProjectForm from './ProjectForm'\r\nimport firebase from '../firebase'\r\nimport { TodoContext } from '../context'\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\n\r\nconst MySwal = withReactContent(Swal)\r\n\r\nfunction RenameProject({project, setShowModal}) {\r\n    // STATE\r\n    const [newProjectName, setNewProjectName] = useState(project.name)\r\n\r\n    // CONTEXT\r\n    const { selectedProject, setSelectedProject } = useContext(TodoContext)\r\n\r\n    // rename Project\r\n    const renameProject = (project, newProjectName) => {\r\n        const projectsRef = firebase.firestore().collection('projects')\r\n        const todosRef = firebase.firestore().collection('todos')\r\n\r\n        const { name : oldProjectName } = project\r\n\r\n        projectsRef\r\n            .where('name', '==', newProjectName)\r\n            .get()\r\n            .then( querySnapshot => {\r\n                if (!querySnapshot.empty) {\r\n                    MySwal.fire({\r\n                        text: 'Project with the same name already exists!',\r\n                        icon: 'warning',\r\n                        iconColor: '#00917C',\r\n                        confirmButtonColor: '#025955'\r\n                    })\r\n                } else {\r\n                    projectsRef\r\n                        .doc(project.id)\r\n                        .update({\r\n                            name : newProjectName\r\n                        })\r\n                        .then( () => {\r\n                            todosRef\r\n                                .where('projectName', '==', oldProjectName)\r\n                                .get()\r\n                                .then( querySnapshot => {\r\n                                    querySnapshot.forEach( doc => {\r\n                                        doc.ref.update({\r\n                                            projectName : newProjectName\r\n                                        })\r\n                                    })\r\n                                })\r\n                                .then( () => {\r\n                                    if (selectedProject === oldProjectName) {\r\n                                        setSelectedProject(newProjectName)\r\n                                    }\r\n                                })\r\n                        })\r\n                }\r\n            })\r\n    }\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault()\r\n\r\n        renameProject(project, newProjectName)\r\n\r\n        setShowModal(false)\r\n    }\r\n\r\n    return (\r\n        <div className='RenameProject'>\r\n            <ProjectForm\r\n                handleSubmit={handleSubmit}\r\n                heading='Edit project name!'\r\n                value={newProjectName}\r\n                setValue={setNewProjectName}\r\n                setShowModal={setShowModal}\r\n                confirmButtonText='Confirm'\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RenameProject","import React, {useContext, useState} from 'react'\r\nimport { Pencil, XCircle } from 'react-bootstrap-icons'\r\nimport Modal from './Modal'\r\nimport RenameProject from './RenameProject'\r\nimport { TodoContext } from '../context'\r\nimport firebase from '../firebase'\r\nimport { useTransition, useSpring, animated } from 'react-spring'\r\n\r\nfunction Project({project, edit}){\r\n    // CONTEXT\r\n    const { defaultProject, selectedProject, setSelectedProject } = useContext(TodoContext)\r\n\r\n    // STATE\r\n    const [showModal, setShowModal] = useState(false)\r\n\r\n    const deleteProject = project => {\r\n        firebase\r\n            .firestore()\r\n            .collection('projects')\r\n            .doc(project.id)\r\n            .delete()\r\n            .then( () => {\r\n                firebase\r\n                    .firestore()\r\n                    .collection('todos')\r\n                    .where('projectName', '==', project.name)\r\n                    .get()\r\n                    .then( (querySnapshot) => {\r\n                        querySnapshot.forEach( doc => {\r\n                            doc.ref.delete()\r\n                        })\r\n                    })\r\n            })\r\n            .then( () => {\r\n                if( selectedProject === project.name ){\r\n                    setSelectedProject(defaultProject)\r\n                }\r\n            })\r\n    }\r\n\r\n    // ANIMATION\r\n    const fadeIn = useSpring({\r\n        from : { marginTop : '-12px', opacity : 0 },\r\n        to : { marginTop : '0px', opacity : 1}\r\n    })\r\n    const btnTransitions = useTransition(edit, {\r\n        from : { opacity : 0, right : '-20px' },\r\n        enter : { opacity : 1, right : '0px' },\r\n        leave : { opacity : 0, right : '-20px' }\r\n    })\r\n\r\n    return (\r\n        <animated.div style={fadeIn} className='Project'>\r\n            <div\r\n                className=\"name\"\r\n                onClick={ () => setSelectedProject(project.name)}\r\n            >\r\n                {project.name}\r\n            </div>\r\n            <div className=\"btns\">\r\n                {\r\n                    btnTransitions((props, editProject) => \r\n                        editProject ?\r\n                        <animated.div style={props} className=\"edit-delete\">\r\n                            <span\r\n                                className=\"edit\"\r\n                                onClick={ () => setShowModal(true)}\r\n                            >\r\n                                <Pencil size=\"15\" color=\"#3b3b3b\" />\r\n                            </span>\r\n                            <span\r\n                                className=\"delete\"\r\n                                onClick={ () => deleteProject(project)}\r\n                            >\r\n                                <XCircle size=\"15\" color=\"#3b3b3b\"/>\r\n                            </span>\r\n                        </animated.div>\r\n                        :\r\n                        project.numOfTodos === 0 ?\r\n                        \"\"\r\n                        :\r\n                        <animated.div style={props} className=\"total-todos\">\r\n                            {project.numOfTodos}\r\n                        </animated.div>\r\n                    )\r\n                }\r\n            </div>\r\n            <Modal showModal={showModal} setShowModal={setShowModal}>\r\n                <RenameProject project={project} setShowModal={setShowModal}/>\r\n            </Modal>\r\n        </animated.div>\r\n    )\r\n}\r\n\r\nexport default Project","import React, {useContext, useState} from 'react'\r\nimport { CaretUp, Palette, PencilFill } from 'react-bootstrap-icons'\r\nimport AddNewProject from './AddNewProject'\r\nimport Project from './Project'\r\nimport { TodoContext } from '../context'\r\nimport { useSpring, animated } from 'react-spring'\r\n\r\nfunction Projects() {\r\n\r\n    const [showMenu, setShowMenu] = useState(true)\r\n    const [edit, setEdit] = useState(false)\r\n    const pencilColor = edit ? \"#1EC94C\" : \"#025955\"\r\n    const changeHover = edit ? \"onClick\" : \"edit\"\r\n\r\n    // CONTEXT\r\n    const { projects } = useContext(TodoContext)\r\n\r\n    // ANIMATION\r\n    const spin = useSpring({\r\n        transform : showMenu ? 'rotate(0deg)' : 'rotate(180deg)',\r\n        config : { friction : 10 }\r\n    })\r\n\r\n    const menuAnimation = useSpring({\r\n        display : showMenu ? 'block' : 'none',\r\n        lineHeight : showMenu ? 1.2 : 0\r\n    })\r\n\r\n    return (\r\n        <div className='Projects'>\r\n            <div className=\"header\">\r\n                <div className=\"title\">\r\n                    <Palette size={24}\r\n                             color=\"#025955\" />\r\n                    <p>Projects</p>\r\n                </div>\r\n                <div className=\"btns\">\r\n                    {\r\n                        showMenu && projects.length > 0 &&\r\n                        <span className={changeHover} onClick={ () => setEdit(edit => !edit)}>\r\n                            <PencilFill size={16} color={pencilColor} />\r\n                        </span>\r\n                    }\r\n                    <AddNewProject />\r\n                    <animated.span\r\n                        className='arrow'\r\n                        onClick={() => setShowMenu(!showMenu)}\r\n                        style={spin}\r\n                    >\r\n                        <CaretUp size={24}\r\n                                 color=\"#025955\" />\r\n                    </animated.span>\r\n                </div>\r\n            </div>\r\n            <animated.div style={menuAnimation} className=\"items\">\r\n                {\r\n                    projects.map( project => \r\n                        <Project\r\n                            project={project}\r\n                            key={project.id}\r\n                            edit={edit}\r\n                        />\r\n                    )\r\n                }\r\n            </animated.div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Projects","import moment from 'moment'\r\nimport React, {useContext, useState} from 'react'\r\nimport { ArrowClockwise, CheckCircleFill, Circle, Trash } from 'react-bootstrap-icons'\r\nimport firebase from '../firebase'\r\nimport { TodoContext } from '../context'\r\nimport { useSpring, useTransition, animated } from 'react-spring'\r\n\r\nfunction Todo({todo}){\r\n    // STATE\r\n    const [hover, setHover] = useState(false)\r\n\r\n    // CONTEXT\r\n    const { selectedTodo, setSelectedTodo } = useContext(TodoContext)\r\n\r\n    const deleteTodo = todo => {\r\n        firebase\r\n            .firestore()\r\n            .collection('todos')\r\n            .doc(todo.id)\r\n            .delete()\r\n    }\r\n\r\n    const checkTodo = todo => {\r\n        firebase\r\n            .firestore()\r\n            .collection('todos')\r\n            .doc(todo.id)\r\n            .update({\r\n                checked : !todo.checked\r\n            })\r\n    }\r\n\r\n    const repeatNextDay = todo => {  \r\n        const nextDayDate = moment(todo.date, 'MM/DD/YYYY').add(1, 'days')\r\n\r\n        const repeatedTodo = {\r\n            ...todo,\r\n            date : nextDayDate.format('MM/DD/YYYY'),\r\n            day : nextDayDate.format('d'),\r\n            checked : false\r\n        }\r\n\r\n        delete repeatedTodo.id\r\n        \r\n        firebase\r\n            .firestore()\r\n            .collection('todos')\r\n            .add(repeatedTodo)\r\n    }\r\n\r\n    const handleDelete = (todo) => {\r\n        deleteTodo(todo)\r\n        if(selectedTodo === todo){ \r\n            setSelectedTodo(false)\r\n        }\r\n    }\r\n\r\n    // ANIMATION\r\n    const fadeIn = useSpring({\r\n        from : { marginTop : '-12px', opacity : 0 },\r\n        to : { marginTop : '0px', opacity : 1}\r\n    })\r\n\r\n    const checkTransitions = useTransition(todo.checked, {\r\n        from : { position : 'absolute', transform : 'scale(0)' },\r\n        enter : { transform : 'scale(1)' },\r\n        leave : { transform : 'scale(0)' }\r\n    })\r\n\r\n    return (\r\n        <animated.div style={fadeIn} className='Todo'>\r\n            <div\r\n                className=\"todo-container\"\r\n                onMouseEnter={() => setHover(true)}\r\n                onMouseLeave={() => setHover(false)}\r\n            >\r\n                <div\r\n                    className=\"check-todo\"\r\n                    onClick={ () => checkTodo(todo) }\r\n                >\r\n                    {\r\n                        checkTransitions((props, checked) => \r\n                            checked ?\r\n                            <animated.span style={props} className=\"checked\">\r\n                                <CheckCircleFill color=\"#bebebe\" />\r\n                            </animated.span>\r\n                            :\r\n                            <animated.span style={props} className=\"unchecked\">\r\n                                <Circle color={todo.color} />\r\n                            </animated.span>\r\n                        )\r\n                    }\r\n                </div>\r\n                <div\r\n                    className=\"text\"\r\n                    onClick={ () => setSelectedTodo(todo)}\r\n                >\r\n                    <p style={{color : todo.checked ? '#bebebe' : '#000000'}}>{todo.text}</p>\r\n                    <span style={{color : todo.checked ? '#bebebe' : ''}} \r\n                          >{todo.time} - {todo.projectName} \r\n                    </span>\r\n                    <div className={`line ${todo.checked ? 'line-through' : ''}`}></div>\r\n                </div>\r\n                <div\r\n                    className=\"add-to-next-day\"\r\n                    onClick={() => repeatNextDay(todo)}\r\n                >\r\n                    {\r\n                        todo.checked &&\r\n                        <span className=\"arrow-clock-icon icon-style\">\r\n                            <ArrowClockwise color=\"#3b3b3b\"/>\r\n                        </span>\r\n                    }\r\n                </div>\r\n                <div\r\n                    className=\"delete-todo\"\r\n                    onClick={ () => handleDelete(todo)}\r\n                >\r\n                    {\r\n                        (hover || todo.checked) &&\r\n                        <span className=\"delete-icon icon-style\">\r\n                            <Trash color=\"#3b3b3b\"/>\r\n                        </span>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </animated.div>\r\n    )\r\n}\r\n\r\nexport default Todo","import moment from 'moment'\r\nimport React, { useEffect, useState } from 'react'\r\nimport Todo from './Todo'\r\n\r\nfunction Next7Days({ todos }) {\r\n    \r\n    const [weekTodos, setWeekTodos] = useState([])\r\n\r\n    useEffect(() => {\r\n        const days = ['0', '1', '2', '3', '4', '5', '6']\r\n\r\n        const sortedTodosByDay = days.map(day => {\r\n            return {\r\n                todos: todos.filter(todo => todo.day === day),\r\n                number: day\r\n            }\r\n        })\r\n\r\n        const today = parseInt(moment().format('d'))\r\n\r\n        const arrangeDays = sortedTodosByDay.slice(today).concat(sortedTodosByDay.slice(0, today))\r\n\r\n        setWeekTodos(arrangeDays)\r\n    }, [todos])\r\n\r\n    return (\r\n        <div className='Next7Days'>\r\n            {\r\n                weekTodos.map(day =>\r\n                    <div key={day.number}>\r\n                        <div className='day'>\r\n                            <div className='name'>\r\n                                {moment(day.number, 'd').format('dddd')}\r\n                                {day.number === moment().format('d') && ' (Today)'}\r\n                            </div>\r\n                            <div className='total-todos'>\r\n                                ({day.todos.length})\r\n                            </div>\r\n                        </div>\r\n                        <div className='todos'>\r\n                            {\r\n                                day.todos.map(todo =>\r\n                                    <Todo key={todo.id} todo={todo} />\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Next7Days","import React, {useContext} from 'react'\r\nimport Todo from './Todo'\r\nimport Next7Days from './Next7Days'\r\nimport { TodoContext } from '../context'\r\n\r\nfunction Todos() {\r\n\r\n    const { todos, selectedProject } = useContext(TodoContext)\r\n\r\n    return (\r\n        <div className='Todos'>\r\n            <div className='selected-project'>\r\n                {selectedProject}\r\n            </div>\r\n            <div className=\"todos\">\r\n            {\r\n                selectedProject === \"next 7 days\" ?\r\n                <Next7Days todos={todos} />\r\n                :\r\n                todos.map( todo => \r\n                    <Todo todo={todo} key={todo.id} />    \r\n                )\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todos","import React, {useContext, useEffect, useState} from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport { TodoContext } from '../context'\r\nimport moment from 'moment'\r\nimport firebase from '../firebase'\r\n\r\nfunction EditTodo() {\r\n    // STATE\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState(new Date())\r\n    const [time, setTime] = useState(new Date())\r\n    const [todoProject, setTodoProject] = useState('')\r\n\r\n    // CONTEXT\r\n    const { selectedTodo, projects } = useContext(TodoContext)\r\n\r\n    useEffect(() => {\r\n        if (selectedTodo) {\r\n            setText(selectedTodo.text)\r\n            setDay(moment(selectedTodo.date, 'MM/DD/YYYY'))\r\n            setTime(moment(selectedTodo.time, 'hh:mm A'))\r\n            setTodoProject(selectedTodo.projectName)\r\n        }\r\n    }, [selectedTodo])\r\n\r\n    useEffect(() => {\r\n        if(selectedTodo){\r\n            firebase\r\n                .firestore()\r\n                .collection('todos')\r\n                .doc(selectedTodo.id)\r\n                .update({\r\n                    text,\r\n                    date : moment(day).format('MM/DD/YYYY'),\r\n                    day : moment(day).format('d'),\r\n                    time : moment(time).format('hh:mm A'),\r\n                    projectName : todoProject\r\n                })\r\n        }\r\n\r\n    }, [text, day, time, todoProject])\r\n\r\n    function handleSubmit(e) {\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            {\r\n                selectedTodo &&\r\n                <div className='EditTodo'>\r\n                    <div className=\"header\">\r\n                        Edit Todo\r\n                    </div>\r\n                    <div className=\"container\">\r\n                        <TodoForm\r\n                            handleSubmit={handleSubmit}\r\n                            text={text}\r\n                            setText={setText}\r\n                            day={day}\r\n                            setDay={setDay}\r\n                            time={time}\r\n                            setTime={setTime}\r\n                            todoProject={todoProject}\r\n                            setTodoProject={setTodoProject}\r\n                            projects={projects}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditTodo","import './App.css';\nimport Sidebar from './components/Sidebar'\nimport Main from './components/Main'\nimport User from './components/User'\nimport AddNewTodo from './components/AddNewTodo'\nimport Calendar from './components/Calendar'\nimport Projects from './components/Projects'\nimport Todos from './components/Todos'\nimport EditTodo from './components/EditTodo'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Sidebar>\n        <div className=\"side-container-1\">\n          <User />\n          <AddNewTodo />\n        </div>\n        <div className=\"side-container-2\">\n          <Calendar />\n          <Projects />\n        </div>        \n      </Sidebar>\n      <Main>\n        <Todos />\n        <EditTodo />\n      </Main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { TodoContextProvider } from './context/index.js'\n\nReactDOM.render(\n  <React.StrictMode>\n    <TodoContextProvider>\n      <App />\n    </TodoContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}